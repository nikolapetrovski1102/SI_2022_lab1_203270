git init -> Инициализирање на фолдерот
git remote add origin https://github.com/nikolapetrovski1102/SI_2022_lab1_203270.git -> додавање нов remote repo
git remote -v -> проверување дали е додаден истиот
git checkout -b master -> креирање нова гранка master
git clone https://github.com/nikolapetrovski1102/SI_2022_lab1_203270.git -> клонирање на репозиториумот во фолдерот SI_2022__lab1_203270
git add . -> сите фајлови моментлано се staged
git commit -m "Add 5 items to the shopping list" -> сите staged фајлови во unmodified
git commit -a -m "Add quantities to the items" -> команда која прави git add и git commit во еден ред
git checkout -b branch1 -> додавање на нова гранка branch1 и влегување во истата
git checkout -b branch2 -> исто како branch1
git log: -> излистани сите commiti што сме ги направиле до сега
commit 586d76309fc9bd0e1020f4c1edfc2be644f11edc (HEAD -> branch2, main, branch1)

    Add quantities to the items

commit a2928103fd820a9b1f1cd6021ede36cde6387382

    Add 5 items to the shopping list

commit c36e44c48a2d94e86a65046ddbb01a4b01c5bcdb (origin/main, origin/HEAD)

    Create README.md

git push --all -> push на сите staged фајлови кон remote repo
git checkout branch1 -> кон гранка branch1
git commit -a -m "Change quantity of item #5" -> во една линија add и commit
git checkout master -> кон гранка master
git commit -a -m "Change quantity of item #2" -> во една линија add и commit
git push --all -> сихноризирање на локал и remote repo
git checkout branch2 -> кон гранка branch2
git commit -a -m "Modify item #4" -> во една линија add и commit
git log: -> сите commit-и од сега
commit fa8cdfa038e4b9501a0d2acc30dd478b2bee7d91 (HEAD -> branch2)

    Modify item #4

commit 586d76309fc9bd0e1020f4c1edfc2be644f11edc (origin/branch2)

    Add quantities to the items

commit a2928103fd820a9b1f1cd6021ede36cde6387382

    Add 5 items to the shopping list

commit c36e44c48a2d94e86a65046ddbb01a4b01c5bcdb

    Create README.md

git commit -a -m "add item #6"
git rebase -i --root -> interactive rebase(за squash помеѓу Modify item #4 и add item #6)
git log: 
commit 564ed63b0cdcf072dd77afebf22b83f89802df12 (HEAD -> branch2)

    Modify item #4 and add item #6

commit 586d76309fc9bd0e1020f4c1edfc2be644f11edc (origin/branch2)

    Add quantities to the items

commit a2928103fd820a9b1f1cd6021ede36cde6387382

    Add 5 items to the shopping list

commit c36e44c48a2d94e86a65046ddbb01a4b01c5bcdb

    Create README.md

git checkout master
git merge branch1 -> при спојување на master и branch1 нема конфликт бидејќи нема драстични промени
git merge --no-ff branch2 -> За разлика од merge со branch1 кај branch2 мора самите да одлучиме кои
линии ке останат а кои ке ги избришеме помеѓу master и branch2 (HEAD, branch2) со мануелно менување
на .txt документот правиме git commit -a -m "Merge branch 'branch2'" така merge conflict-от се решава
git add 203270.txt -> документот 203270.txt е staged
git commit -m "Add docs" -> документот 203270.txt е unmodified
git push --all